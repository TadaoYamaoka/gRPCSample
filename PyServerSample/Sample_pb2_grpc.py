# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import Sample_pb2 as Sample__pb2


class UserServiceStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.SetUser = channel.unary_unary(
        '/sample.UserService/SetUser',
        request_serializer=Sample__pb2.User.SerializeToString,
        response_deserializer=Sample__pb2.UserResponse.FromString,
        )


class UserServiceServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def SetUser(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_UserServiceServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'SetUser': grpc.unary_unary_rpc_method_handler(
          servicer.SetUser,
          request_deserializer=Sample__pb2.User.FromString,
          response_serializer=Sample__pb2.UserResponse.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'sample.UserService', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
